%h1 Smorg

<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

:css
  div.tooltip {
    position: absolute;
    text-align: center;
    width: 100px;
    height: 28px;
    padding: 2px;
    font: 12px sans-serif;
    background: lightsteelblue;
    border: 0px;
    border-radius: 8px;
    pointer-events: none;
  }
  .grid .tick {
    stroke: lightgrey;
    opacity: 0.7;
  }
  .grid path {
        stroke-width: 0;
  }
  .line {
    fill: none;
    stroke: #000;
  }

:javascript
  var formatTime = d3.time.format("%e %B %I:%M %p");

  var div = d3.select("body").append("div")
      .attr("class", "tooltip")
      .style("opacity", 0);

  var margin = {top: 30, right: 40, bottom: 80, left: 50},
      width = 960 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;

  var x = d3.time.scale()
      .range([0, width]);

  var y0 = d3.scale.linear()
      .range([height, 0]);
  var y1 = d3.scale.linear()
      .range([height, 0]);

  function make_x_axis() {
      return d3.svg.axis()
          .scale(x)
           .orient("bottom")
  }

  var yAxis = d3.svg.axis()
      .scale(y0)
      .orient("left");

  var colorscale = d3.scale.linear()
      .domain([0, 350, 500, 2000])
      .range(["red", "orange", "green", "green"]);

  function color(d) {
    return colorscale(d.exp);
  }

  var svg = d3.select("body").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
      .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  var regression = d3.svg.line()
      .interpolate("basis")
      .x(function(d) { return x(d.time); })
      .y(function(d) { return y0(d.running_average); })

  d3.json("/smorg_exp.json", function(error, data) {
    x.domain(d3.extent(data, function(d) { return d.time; }));
    y0.domain(d3.extent(data, function(d) { return d.exp; }));
    y1.domain(d3.extent(data, function(d) { return d.level; }));

    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(make_x_axis())
        .selectAll("text")
            .style("text-anchor", "end")
            .attr("dx", "-.8em")
            .attr("dy", ".15em")
            .attr("transform", function(d) {
                return "rotate(-65)"
                });

    svg.append("g")
        .attr("class", "grid")
        .attr("transform", "translate(0," + height + ")")
        .call(make_x_axis()
            .tickSize(-height, 0, 0)
            .tickFormat("")
        )

    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis)
        .append("text")
        .attr("transform", "rotate(-90)")
        .attr("y", 6)
        .attr("dy", ".71em")
        .style("text-anchor", "end")
        .text("Exp Per 15 Mins");

    svg.selectAll(".dot")
      .data(data)
      .enter().append("circle")
      .attr("class", "dot")
      .attr("r", 2.5)
      .attr("cx", function(d) { return x(d.time); })
      .attr("cy", function(d) { return y0(d.exp); })
      .style('fill', color)
      .on("mouseover", function(d) {
            div.transition()
                .duration(200)
                .style("opacity", .9);
            div.html(formatTime(new Date(d.time)) + "<br/>"  + d.exp)
                .style("left", (d3.event.pageX) + "px")
                .style("top", (d3.event.pageY - 28) + "px");
            })
        .on("mouseout", function(d) {
            div.transition()
                .duration(500)
                .style("opacity", 0);
        });

    svg.selectAll(".dot2")
      .data(data)
      .enter().append("circle")
      .attr("class", "dot")
      .attr("r", 1.5)
      .attr("cx", function(d) { return x(d.time); })
      .attr("cy", function(d) { return y1(d.level); })
      .style("fill", 'blue')
      .on("mouseover", function(d) {
        div.transition()
            .duration(200)
            .style("opacity", .9);
        div.html(formatTime(new Date(d.time)) + "<br/>Level: "  + d.level)
            .style("left", (d3.event.pageX) + "px")
            .style("top", (d3.event.pageY - 28) + "px");
        })
      .on("mouseout", function(d) {
          div.transition()
              .duration(500)
              .style("opacity", 0);
      });
    svg.append("svg:path").attr("d", regression(data)).attr("class", "line");


  });
